server{
        listen 8888;
        server_name localhost;
        resolver 114.114.114.114;
        location / {
            include mime.types;
            #set varible to proxy 
            set $proxy '';
            #proxy_redirect     off;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header   Host             $host;
            access_by_lua_file lua/access.lua;
            body_filter_by_lua_file lua/replace.lua;
            header_filter_by_lua_block {
            --    ngx.header["content-type"]='text/html;charset=UTF-8'
            }
        }

         location ~^/redirect_checker(.*)$ {
             proxy_pass http://download_server$1$is_args$args;
         }
         location @download_server {
            #internal;
            #proxy_pass_request_headers off;
            proxy_set_header Accept-Encoding "";
            proxy_set_header Host      $host;
            proxy_pass $scheme://$proxy$request_uri;
            header_filter_by_lua_block {
                ngx.log(ngx.INFO,"****subrequest request_uri=***"..ngx.var.request_uri)
                --show resp headers
                local resp= require "lua.lib.resp"
                local h = resp.get_resp_headers()
                local i=0
                for k, v in pairs(h) do
                    i=i +1
                    ngx.log(ngx.INFO,"sub resp_headers["..i.."]:"..k..':'..v)
                end
            }
            #want to add respon header here. resp header "text/html;charset=UTF-8
        }
}
