#
#  Author:liuyf
#  Email:liuyf90@gmail.com
#  Time:Nov 29, 2022 at 14:40
#
#  webvpn nginx config
#  @download_server :  proxy to actual url or domainname
#  /: busi logic that where to proxy
#  
#

log_format varups '$upstream_addr $upstream_connect_time $upstream_header_time $upstream_response_time '
                  '$upstream_response_length $upstream_bytes_received '
                  '$upstream_status $upstream_http_server $upstream_cache_status';



server {
        listen 80;
        listen 443 ssl; 
        server_name *.webvpn2.hrbfu.edu.cn;
        resolver 172.16.17.23;
        access_log logs/upstream_access.log varups;
#配置appbvpn证书
        ssl on;
        ssl_certificate     conf.d/appcert/global.certificate.crt;
        ssl_certificate_key conf.d/appcert/global.certificate.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        #set init variety
        location / {
            include mime.types;
            #set varible to proxy 
            set $proxy '';
            set $casport '';
            set $cscheme '';
            set_by_lua_block $casport {
                local data = require "lua.init_data"
                return data.get("casport");          -- return the $casport value normally
            } 
            #proxy_redirect     off;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header   Host             $host;
            #change url to cas when url contains authserver
            rewrite (authserver/)(.*)$ http://$Host:$casport/$1$2 break;
            # busi logic that where to proxy
            access_by_lua_file lua/access.lua;
            header_filter_by_lua_block {
            }
        }
        location @download_server {
            #add_header Expires "max-age=20"; # 5 mins 
            proxy_set_header Accept-Encoding "";
            proxy_pass $cscheme://$proxy$request_uri;
            # set resp header in here
            header_filter_by_lua_file lua/resp_header_filter.lua;
            # rewrite content body 
            body_filter_by_lua_file lua/replace.lua;
        }
}
