#
#  Author:liuyf
#  Email:liuyf90@gmail.com
#  Time:Jun 22, 2022 at 15:25
#
worker_processes  1;
error_log logs/error.log;


events {
    worker_connections 1024;
}
http {
    #devlop disable cache,online setup 'on'
    lua_code_cache off;
    #safe from concurrent accesses from multiple Nginx worker processes for the same lua_shared_dict zone
    lua_shared_dict ips 10m;
    # set search paths for pure Lua external libraries (';;' is the default path):
    lua_package_path '$prefix/conf/lua/?.lua;$prefix/conf/lua/lib/?.lua;;';
    # test section
    server {
        listen 8080;
        location / {
            default_type text/html;
            #relative path refero to nginx installed path
        #    content_by_lua_file conf/lua/hello.lua;
        }
        location /get_random_string {
            #get random String  
            content_by_lua_file conf/lua/get_random_string.lua;
        } 
        location /decode_info {
            content_by_lua_file conf/lua/decode_info.lua;
        }

        location /mysql {
            content_by_lua_file conf/lua/lib/mysqlconnect.lua;
        }
        location /set {
            content_by_lua_block {
                local dogs = ngx.shared.ips
                    dogs:set("Jim", 8)
                    ngx.say("STORED")
            }
         }
         location /get {
             content_by_lua_block {
                 local dogs = ngx.shared.ips
                 ngx.say(dogs:get("Jim"))
             }
         }
         location /getpath {
             content_by_lua_block {
                 ngx.say(package.path)
             }
         }
         location /testmylib {
             content_by_lua_block {
                 local foo = require "mylib"
                 if not foo then
                     ngx.say("failed to require myblib")
                         return
                 end
                 foo:test()
                 ngx.say(foo.db)
             }
         }
         
    }
    # busi section
    server{
        listen 80;
        server_name *.webvpn.com;
        location /test {
#            rewrite_by_lua_file conf/lua/get_urls.lua;
#            access_by_lua_file conf/lua/get_subdomain.lua;
#            content_by_lua_block {
#                ngx.say("this is content")
#                local ips = ngx.shared.ips
#                --jump to the ip
#                ngx.say(ips:get(ngx.ctx.domain))
#            }
            content_by_lua_file conf/lua/content.lua;
        }
        location /getUrls {
            content_by_lua_file conf/lua/get_urls.lua;
        }
        location /getDomain {
            content_by_lua_file conf/lua/get_subdomain.lua;
        }
    }
}
